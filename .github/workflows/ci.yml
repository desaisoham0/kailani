name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  CACHE_DEPENDENCY_PATH: '**/package-lock.json'

jobs:
  quality-check:
    name: '🔍 Code Quality & Testing'
    runs-on: ubuntu-latest
    
    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: '🟢 Setup Node.js ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: '📦 Install Dependencies'
        run: |
          echo "Installing project dependencies..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: '🔍 TypeScript Type Check'
        run: |
          echo "Running TypeScript type checking..."
          npm run type-check
          echo "✅ Type checking completed"

      - name: '🔍 ESLint Code Analysis'
        run: |
          echo "Running ESLint analysis..."
          npm run lint:check
          echo "✅ ESLint analysis completed"

      - name: '✨ Prettier Format Check'
        run: |
          echo "Checking code formatting with Prettier..."
          npm run format:check
          echo "✅ Format check completed"

  build:
    name: '🏗️ Build Application'
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v4

      - name: '🟢 Setup Node.js ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: '📦 Install Dependencies'
        run: |
          echo "Installing project dependencies..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: '🏗️ Build Application'
        run: |
          echo "Building Vite React application..."
          npm run build
          echo "✅ Build completed successfully"

      - name: '📤 Upload Build Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 30

      - name: '📊 Build Information'
        run: |
          echo "📋 Build Summary:"
          echo "- Build directory: dist/"
          echo "- Build size:" 
          du -sh dist/ || echo "Build directory not found"
          echo "- File count:"
          find dist/ -type f | wc -l || echo "0"
          echo "✅ Build information displayed"

  security-audit:
    name: '🔒 Security Audit'
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v4

      - name: '🟢 Setup Node.js ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: '📦 Install Dependencies'
        run: |
          echo "Installing dependencies for security audit..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed"

      - name: '🔍 NPM Security Audit'
        run: |
          echo "Running npm security audit..."
          echo "📊 Development dependencies audit report:"
          npm audit --dev || true
          echo ""
          echo "🔍 Checking for critical vulnerabilities that could affect development..."
          if npm audit --audit-level=critical --dev; then
            echo "✅ No critical vulnerabilities found in development dependencies"
          else
            echo "⚠️  Critical vulnerabilities found in development dependencies"
            echo "This may affect your development environment but not production deployment"
          fi
          echo "✅ Security audit completed"

      - name: '📊 Check Outdated Packages'
        run: |
          echo "Checking for outdated packages..."
          npm outdated || true
          echo "✅ Outdated packages check completed"

  deployment-check:
    name: '🚀 Deployment Readiness'
    runs-on: ubuntu-latest
    needs: [quality-check, build, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: '📥 Download Build Artifacts'
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: '✅ Validate Build Output'
        run: |
          echo "Validating build artifacts..."
          
          if [ ! -f "dist/index.html" ]; then
            echo "❌ index.html not found in build output"
            exit 1
          fi
          
          if [ ! -d "dist/assets" ]; then
            echo "❌ assets directory not found in build output"
            exit 1
          fi
          
          echo "✅ Build validation successful"
          echo "📋 Build Contents:"
          ls -la dist/
          
          echo "📊 Build Statistics:"
          echo "- Total files: $(find dist/ -type f | wc -l)"
          echo "- Total size: $(du -sh dist/ | cut -f1)"
          
          if ls dist/assets/*.js 2>/dev/null | grep -q "\."; then
            echo "✅ JavaScript bundles found"
          fi
          
          if ls dist/assets/*.css 2>/dev/null | grep -q "\."; then
            echo "✅ CSS bundles found"
          fi
          
          echo "🎉 Application is ready for deployment!"

  summary:
    name: '📋 Workflow Summary'
    runs-on: ubuntu-latest
    needs: [quality-check, build, security-audit]
    if: always()
    
    steps:
      - name: '📊 Display Workflow Results'
        run: |
          echo "🎯 CI/CD Pipeline Summary"
          echo "========================="
          echo "📅 Workflow Run: ${{ github.run_number }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "🔄 Event: ${{ github.event_name }}"
          echo ""
          echo "📊 Job Results:"
          echo "- Quality Check: ${{ needs.quality-check.result }}"
          echo "- Build: ${{ needs.build.result }}"
          echo "- Security Audit: ${{ needs.security-audit.result }}"
          echo ""
          
          if [ "${{ needs.quality-check.result }}" == "success" ] && 
             [ "${{ needs.build.result }}" == "success" ] && 
             [ "${{ needs.security-audit.result }}" == "success" ]; then
            echo "✅ All checks passed! Application is ready for deployment."
          else
            echo "❌ Some checks failed. Please review the job outputs above."
          fi
          
          echo ""
          echo "🔗 Useful Links:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Actions: ${{ github.server_url }}/${{ github.repository }}/actions"
